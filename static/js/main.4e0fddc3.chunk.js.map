{"version":3,"sources":["components/Tab.js","components/TabList.js","components/config.js","components/NewMovieForm.js","components/NewMovieListForm.js","components/NewMovie.js","components/Movies.js","components/Links.js","components/Body.js","App.js","serviceWorker.js","index.js"],"names":["Tab","addStyling","props","tab","id","activeTab","backgroundColor","fontWeight","className","style","this","onClick","changeTab","bind","title","Component","TabList","tabs","map","indTab","config","apiKey","authDomain","databaseURL","firebase","require","axios","NewMovieForm","state","newMovieID","handleChange","handleSubmit","apps","length","initializeApp","event","nam","target","name","val","value","setState","preventDefault","url","get","then","response","data","Response","alert","database","ref","orderByChild","equalTo","imdbID","limitToFirst","once","snap","push","Poster","Title","Year","Director","imdbRating","Metascore","Plot","Awards","Runtime","Actors","List","error","console","log","onSubmit","type","width","fontSize","onChange","React","NewMovieListForm","newMovieListName","Name","NewMovie","useState","Movies","currMovieList","setCurrMovieList","availMovieLists","setAvailMovieLists","availMLAll","setAvailMLAll","chosenML","setChosenML","searchName","setSearchName","setTotalNum","movies","setMovies","shouldRender","open","setOpen","slide","setSlide","openModal","index","x","window","scrollX","y","scrollY","onscroll","scrollTo","disableScrolling","showModal","currMovie","closeOnDocumentClick","onClose","closeModal","contentStyle","overlayStyle","background","src","height","e","lst","snapshot","forEach","child","update","temp_array","indexOf","splice","updateListIn","key","useEffect","on","lists","newStateAll","count","list","mv","newState","new_CurrMovieList","searchMovie","content","movie","tempMovie","newStateFull","currMvs","updateCurrML","displayMovies","d3","Link","drag","simulation","d","active","alphaTarget","restart","fx","fy","nodes","links","obj_links","Object","create","obj_nodes","svg","attr","link","append","selectAll","join","Math","sqrt","img","forceSimulation","force","forceLink","distance","forceManyBody","forceCenter","div","select","node","group","poster","color","transition","duration","html","pageX","pageY","call","source","newNodes","newLinks","name_array","split","temp_name","actorFound","temp_node","index1","findIndex","obj","index2","keys","document","getElementById","appendChild","chart","Body","displayContent","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.4e0fddc3.chunk.js","sourcesContent":["import React, {Component} from 'react';\n\nexport class Tab extends Component{\n  addStyling = () =>{\n    if(this.props.tab.id == this.props.activeTab) {\n      return {backgroundColor: 'transparent', fontWeight: 'bolder'}\n    }\n    else{\n      return {backgroundColor: 'transparent'}\n    }\n  }\n  render(){\n    return(\n      <div className=\"tab\" \n      style={this.addStyling()} \n      onClick={this.props.changeTab.bind(this, this.props.tab.id)}>\n        {this.props.tab.title}\n      </div>\n    );\n  }\n}\nexport default Tab;","import React, {Component} from 'react';\nimport Tab from './Tab';\n\nexport class TabList extends Component{\n  render(){\n    return this.props.tabs.map((indTab) =>(\n      <Tab tab={indTab} \n      activeTab={this.props.activeTab}\n      changeTab={this.props.changeTab}></Tab>\n    ));\n  }\n}\nexport default TabList;","const config = {\n  apiKey: \"AIzaSyDu3M9Sj5s85PTbszJyrvq1ODr6EWvQRLM\",\n  authDomain: \"cs180personalweb.firebaseapp.com\",\n  databaseURL: \"https://cs180personalweb.firebaseio.com\",\n}\nexport default config;","import React, {Component, useEffect, useState} from 'react';\nimport config from './config.js'\n\nconst firebase = require('firebase')\nconst axios = require('axios');\nconst apikey = '98ff92ae';\n\nclass NewMovieForm extends React.Component{\n\n  constructor(props) {\n    super(props);\n    this.state = {newMovieID: null};\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n\n    if (!firebase.apps.length) {\n      firebase.initializeApp(config)\n    } \n  }\n\n  handleChange(event) {\n    let nam = event.target.name;\n    let val = event.target.value;\n    if (nam === \"newMovieID\") {\n      this.setState({newMovieID: val});\n    }\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    const url = 'https://www.omdbapi.com/?apikey='+apikey+'&i='+this.state.newMovieID;\n    ///get the movie info!!\n    axios.get(url)\n      .then(function(response){\n        // console.log(\"Hereeeee\", response);\n        if(response.data.Response=== \"False\"){\n          alert(\"Invalid movie ID, please try again.\");\n          event.preventDefault();\n        }\n        else{\n          let query = firebase.database().ref('data3').orderByChild(\"imdbID\").equalTo(response.data.imdbID).limitToFirst(1);\n          query.once(\"value\", (snap) => {\n            if (snap.val() !== null) {\n              alert(\"This movie already exists.\");\n              event.preventDefault();\n            } else {\n              firebase.database().ref(\"data3\").push(\n                {\n                  imdbID: response.data.imdbID,\n                  Poster: response.data.Poster,\n                  Title: response.data.Title,\n                  Year: response.data.Year,\n                  Director: response.data.Director,\n                  imdbRating: response.data.imdbRating,\n                  Metascore: response.data.Metascore,\n                  Plot: response.data.Plot,\n                  Awards: response.data.Awards,\n                  Runtime: response.data.Runtime,\n                  Actors: response.data.Actors,\n                  List: '',\n                }\n              );\n              alert('The movie has been successfully added.');\n            }\n          });\n        }\n      })\n      .then(function(error){\n        console.log(error);\n      })\n    event.preventDefault();\n  }\n\n  render(){\n    return(\n      <form className=\"newMovieListForm\" onSubmit={this.handleSubmit}>\n        <label>\n          Movie ID: <br/>\n          <input type=\"text\" name=\"newMovieID\" value={this.state.newMovieID} style={{width: \"250px\", fontSize: \"13pt\"}} onChange={this.handleChange} /> \n          Please give the imdbID of the movie.\n        </label><br/>\n        <input className=\"submitBtn\" type=\"submit\" value=\"Submit\"  />\n      </form>\n    );\n  }\n}export default NewMovieForm;","import React, {Component, useEffect, useState} from 'react';\nimport config from './config.js'\n\nconst firebase = require('firebase')\nconst axios = require('axios');\nconst apikey = '98ff92ae';\n\nclass NewMovieListForm extends React.Component{\n\n  constructor(props) {\n    super(props);\n    this.state = {newMovieListName: null};\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n\n    if (!firebase.apps.length) {\n      firebase.initializeApp(config)\n    } \n  }\n\n  handleChange(event) {\n    let nam = event.target.name;\n    let val = event.target.value;\n    if (nam === \"newMovieListName\") {\n      this.setState({newMovieListName: val});\n    }\n  }\n\n  handleSubmit(event) {        \n    let query = firebase.database().ref('data4').orderByChild(\"Name\").equalTo(this.state.newMovieListName);\n    query.once(\"value\", (snap) => {\n      if (snap.val() !== null) {\n        alert(\"This movie list name already exists.\");\n        event.preventDefault();\n      } else {\n        firebase.database().ref(\"data4\").push(\n          {\n            Name: this.state.newMovieListName,\n          }\n        );\n        alert('The movie list has been successfully created.');\n      }\n    });\n      \n    event.preventDefault();\n  }\n\n  render(){\n    return(\n      <form className=\"newMovieListForm\" onSubmit={this.handleSubmit}>\n        <label>\n          List title : <br/>\n          <input type=\"text\" name=\"newMovieListName\" value={this.state.newMovieListName} style={{width: \"250px\", fontSize: \"13pt\"}} onChange={this.handleChange} /> \n          Please enter a title for the new list.\n        </label><br/>\n        <input className=\"submitBtn\" type=\"submit\" value=\"Submit\"  />\n      </form>\n    );\n  }\n}export default NewMovieListForm;","import React, {Component, useEffect, useState, useLayoutEffect} from 'react';\nimport Popup from \"reactjs-popup\";\nimport config from './config.js'\nimport NewMovieForm from './NewMovieForm'\nimport NewMovieListForm from './NewMovieListForm'\nconst firebase = require('firebase')\n\nfunction NewMovie(props){\n  const [newMovie, setNewMovie] = useState([]);\n  const [shouldRender, setShouldRender] = useState(true)\n\n  return(\n    <div>\n      <div className=\"big-words\">\n        Add a new movie<br/>\n        <NewMovieForm></NewMovieForm>\n      </div>\n      <br/><br/>\n      <div className=\"big-words\">\n        Create a new movie list<br/>\n        <NewMovieListForm></NewMovieListForm>\n      </div>\n    </div>\n    \n  );\n} export default NewMovie;","import React, {Component, useEffect, useState, useLayoutEffect} from 'react';\nimport Popup from \"reactjs-popup\";\nimport './Movies.css'\nimport NewMovie from './NewMovie';\nimport config from './config.js'\n\nconst firebase = require('firebase')\nconst axios = require('axios');\nconst apikey = '98ff92ae';\n\nfunction Movies(props){\n\n  // const movieIds = [\"tt1375666\",\"tt0190332\",\"tt0468569\",\"tt0499549\",\"tt3783958\",\"tt0107156\",\"tt5580390\",\"tt2948356\",\"tt1024648\",\"tt2380307\",\"tt0944835\",\"tt0093389\"];\n  const [currMovieList, setCurrMovieList] = useState([]);\n  const [availMovieLists, setAvailMovieLists] = useState([]);\n  const [availMLAll, setAvailMLAll] = useState([]);\n  const [chosenML, setChosenML] = useState('All');\n  const [searchName, setSearchName] = useState('');\n  const [totalNum, setTotalNum] = useState(0);\n  const [movies, setMovies] = useState([]);\n  const [shouldRender, setShouldRender] = useState(true);\n  const [open, setOpen] = useState(false);\n  const [slide, setSlide] = useState(0);\n  const [beginning, setBeginning] = useState(false);\n\n  function disableScrolling(){\n      var x=window.scrollX;\n      var y=window.scrollY;\n      window.onscroll=function(){window.scrollTo(x, y);};\n  }\n\n  function enableScrolling(){\n      window.onscroll=function(){};\n  }\n\n  useEffect(() => {\n    // get all the movies in data3\n    console.log(\"Calling UseEffect Again!!\");\n    firebase.database().ref(\"data3\").on(\"value\", snapshot => {\n      const lists = snapshot.val();\n      let newStateAll = [];\n      let count = 0;\n      for (let list in lists) {\n        newStateAll.push(lists[list]);\n        count = count + 1;\n      }\n      setTotalNum(count);\n      setMovies(newStateAll);\n      if(chosenML === \"All\" && searchName === \"\"){\n        setCurrMovieList(newStateAll);\n      }\n      else{\n        let count3 = 0;\n        for (let mv in newStateAll){\n          if(newStateAll[mv].List === chosenML){\n            count3 = count3 + 1;\n          }\n        }\n      }\n    });\n\n    //get all available movie lists\n    firebase.database().ref(\"data4\").on(\"value\", snapshot => {\n      const lists = snapshot.val();\n      let newState = [\"\"];\n      let newStateAll = [\"All\"]; //contains the list \"All\"\n      for (let list in lists) {\n        newState.push(lists[list].Name);\n        newStateAll.push(lists[list].Name);\n      }\n      setAvailMovieLists(newState);\n      setAvailMLAll(newStateAll);\n    });\n\n  }, [shouldRender,open]);\n\n  function openModal(index) {\n    setOpen(open => true);\n    setSlide(slide => index);\n    disableScrolling();\n    console.log(\"open ? \",open);\n    console.log(\"Clicked on this movie: \", currMovieList[index]);\n  }\n\n  function showModal(){\n    var currMovie = currMovieList[slide];\n    if(open === true){\n      return(\n        <Popup\n          open={open}\n          closeOnDocumentClick\n          onClose={() => closeModal()}\n          contentStyle={{width: \"500px\"}}\n          overlayStyle={{background: \"rgba(0,0,0,0.1)\"}}\n          \n        >\n          <div className=\"movieDetails\">\n            <button className=\"close1\" onClick={() => closeModal()}>\n              &times;\n            </button>\n            <div className=\"moviePoster\">\n              <img src={currMovie.Poster} height=\"330px\"/>\n            </div>\n            <div className=\"movieDes\">\n              <div className=\"movieTitle\">{currMovie.Title}</div>\n              <div className=\"movieYear\">{currMovie.Year}</div>\n              <div className=\"movieDirect\">Directed by {currMovie.Director}</div>\n              <div className=\"movieScore\">\n                <div className=\"imdbScore\">IMDB Score: {currMovie.imdbRating}</div>\n                <div className=\"metaScore\">Meta Score: {currMovie.Metascore}</div>\n              </div>\n              <div className=\"moviePlot\">{currMovie.Plot}</div>\n              <div className=\"movieAwards\">{currMovie.Awards}</div>\n              <div className=\"movieMin\">{currMovie.Runtime}</div>\n              <div className=\"movieScore\">\n                <div className=\"updateListIn\">\n                  <label>\n                    Put in list:\n                    <select value={currMovie.List} onChange={e => {closeModal(); updateListIn(e.target.value, currMovie);}} style={{ fontSize: \"13pt\"}}>\n                      {availMovieLists.map(lst => (\n                        <option key={lst} value={lst}>{lst}</option>\n                      ))}\n                    </select>\n                  </label>\n                </div>\n                <div className=\"deleteMovie\" onClick={() => {closeModal();deleteMovie(currMovie);}}>Delete</div>\n              </div>\n            </div>\n          </div>\n        </Popup>\n      );\n    }\n  }\n\n  function closeModal() {\n    setOpen(open => false);\n    enableScrolling();\n    console.log(\"Done close modal\");\n  }\n\n  function updateCurrML(lst){\n    setChosenML(lst);\n    let newStateFull = [];\n    firebase.database().ref(\"data3\").on(\"value\", snapshot => {\n      const lists = snapshot.val();\n      let count = 0;\n      for (let list in lists) {\n        newStateFull.push(lists[list]);\n        count = count + 1;\n      }\n    });\n    //set currMovieList\n    if(lst === 'All'){\n      console.log(\"Choose All!!\");\n      setCurrMovieList(newStateFull);\n    }\n    else{\n      let currMvs = [];\n      for (let mv in newStateFull){\n        if(newStateFull[mv].List === lst){\n          currMvs.push(newStateFull[mv]);\n        }\n      }\n      setCurrMovieList(currMvs);\n    }\n  }\n\n  function updateListIn(lst, currMovie){\n    firebase.database().ref('data3').orderByChild('imdbID').equalTo(currMovie.imdbID).once(\"value\").then(function(snapshot) {\n      snapshot.forEach(function(child) {\n        child.ref.update({'List': lst});\n      }); // a closure is needed here\n    }).then(function() {\n      console.log(\"Moved!\");\n      ///try to update the grid\n      if(chosenML != \"All\"){\n        var temp_array = currMovieList;\n        var index = temp_array.indexOf(currMovie);\n        if (index !== -1) {\n          temp_array.splice(index, 1);\n          setCurrMovieList(temp_array);\n        }\n      }\n    });\n  }\n\n  function deleteMovie(currMovie){\n    // firebase.database().ref('data3').orderByChild('imdbID').equalTo(currMovie.imdbID).once(\"value\").then(function(snapshot) {\n    //   snapshot.forEach(function(child) {\n    //     child.ref.remove();\n    //   }); // a closure is needed here\n    // }).then(function() {\n    //   console.log(\"Removed!\");\n    // });\n    alert(\"You do not have access to delete a movie.\");\n  }\n\n  function searchMovie(e){\n    e.preventDefault();\n    console.log(\"Searching this movie: \", searchName);\n    let new_CurrMovieList = [];\n    for (let mv in movies){\n      if(movies[mv].Title === searchName){\n        new_CurrMovieList.push(movies[mv]);\n      }\n    }\n    setCurrMovieList(new_CurrMovieList);\n    if(searchName === \"\"){\n      setCurrMovieList(movies);\n    }\n  }\n\n  function displayMovies(){\n    const content = currMovieList.map((movie,index) =>{\n      var tempMovie = movie;\n      return (<div key={tempMovie.imdbID} >\n        <img src={tempMovie.Poster} className=\"grid-part-portrait\" onClick={() => openModal(index)}/>\n        {showModal()}\n      </div>)\n    });\n    return (\n      <div className=\"movieGrid\">\n        <div className=\"header1\">\n          <label>\n            <select value={chosenML} onChange={e => {updateCurrML(e.target.value);}} style={{ fontSize: \"13pt\"}}>\n              {availMLAll.map(lst => (\n                <option key={lst} value={lst}>{lst}</option>\n              ))}\n            </select>\n          </label>\n        </div>\n\n        <div className=\"image-grid1\">\n          {content}\n        </div>\n      </div>\n    );\n  }\n\n  function handleChange(searchName){\n    setSearchName(searchName);\n  }\n\n  return(\n    <div className=\"background1\">\n      <div className=\"whitespace\"></div>\n      <div className=\"movies-main\">\n        <div className=\"movies-right\">\n          <br/>\n          <div className=\"big-words\">Search a movie</div>\n          <form className=\"movieScore\">\n            <label>\n              <input type=\"text\" name=\"searchMovie\" value={searchName} style={{width: \"200px\", fontSize: \"13pt\"}} onChange={e => handleChange(e.target.value)}/> \n            </label>\n            <button className=\"searchBtn\" onClick={e => searchMovie(e)}>Search</button>\n          </form>\n          <br/><br/>\n          <NewMovie></NewMovie>\n        </div>\n        <div className=\"movies-left\">\n          <div>\n            {displayMovies()}\n          </div>\n        </div>\n        \n      </div>\n      \n    </div>\n  );\n} export default Movies;\n","import React, { Component } from \"react\";\nimport config from './config.js'\nimport { svg } from 'd3';\n\nconst firebase = require('firebase')\nvar d3 = require('d3');\n\nexport class Link extends Component{\n  constructor(){\n    super();\n    this.state = {\n      nodes: [],\n      links: [],\n      movies: [],\n    };\n  }\n\n  drag = (simulation) => {\n    function dragStarted(d){\n      if(!d3.event.active) simulation.alphaTarget(0.3).restart();\n      d.fx = d.x;\n      d.fy = d.y;\n    }\n\n    function dragged(d){\n      d.fx = d3.event.x;\n      d.fy = d3.event.y;\n    }\n\n    function dragEnded(d){\n      if(!d3.event.active) simulation.alphaTarget(0);\n      d.fx = null;\n      d.fy = null;\n    }\n\n    return d3.drag()\n      .on(\"start\", dragStarted)\n      .on(\"drag\", dragged)\n      .on(\"end\", dragEnded);\n\n  }\n\n  chart(nodes, links){\n    const width = 1920;\n    const height = 1080;\n\n    const obj_links = links.map(d => Object.create(d));\n    const obj_nodes = nodes.map(d => Object.create(d));\n\n    const svg = d3.create(\"svg\")\n      .attr(\"viewBox\", [0, 0, width, height]);\n\n    const link = svg.append(\"g\")\n      .attr(\"stroke\", \"#999\")\n      .attr(\"stroke-opacity\", 0.6)\n      .selectAll(\"line\")\n      .data(obj_links)\n      .join(\"line\")\n      .attr(\"stroke-width\", d=>Math.sqrt(d.value));\n\n    var img = svg.append(\"defs\")\n    const color = (node) => {\n      if(node.group == 1){ //if it's a movie\n        img.append('pattern')\n          .attr('id', 'img_'+node.index)\n          // .attr('patternUnits', 'objectBoundingBox')\n          .attr('width', 1)\n          .attr('height', 1)\n        .append('image')\n          .attr('xlink:href', node.poster)\n          .attr(\"width\", 270)\n          .attr(\"height\", 270)\n          .attr(\"x\", -45)\n          .attr(\"y\", -20);\n        console.log(\"Hey: \", node, \"\\n\", img)\n        return \"url(#img_\" + node.index+ \")\"\n      }\n      return d3.color(\"cornflowerblue\");\n    }\n\n    const radius = (node) => {\n      if(node.group == 1){\n        return 90;\n      }\n      return 20;\n    }\n\n    const simulation = d3.forceSimulation(obj_nodes)\n      .force(\"link\", d3.forceLink().links(links).id(d => {return d.index;}).distance(250))\n      .force(\"charge\", d3.forceManyBody())\n      .force(\"center\", d3.forceCenter(width/2, height/2));\n\n    var div = d3.select(\"body\").append(\"div\")\t\n      .attr(\"class\", \"tooltip\")\t\t\t\t\n      .style(\"opacity\", 0);\n\n    const node = svg.append(\"g\")\n      .attr(\"stroke\", \"#fff\")\n      .attr(\"stroke-width\", 1.5)\n      .selectAll(\"circle\")\n      .data(obj_nodes)\n      .join(\"circle\")\n      .attr(\"r\", radius)\n      .attr(\"fill\", color)\n      .on(\"mouseover\", function(d) {\t\t\n          div.transition()\t\t\n              .duration(200)\t\t\n              .style(\"opacity\", .9);\t\t\n          div.html(d.name)\t\n              .style(\"left\", (d3.event.pageX) + \"px\")\t\t\n              .style(\"top\", (d3.event.pageY - 28) + \"px\");\t\n          })\t\t\t\t\t\n      .on(\"mouseout\", function(d) {\t\t\n          div.transition()\t\t\n              .duration(500)\t\t\n              .style(\"opacity\", 0);\t\n      })\n      .call(this.drag(simulation))\n\n    simulation.on(\"tick\", () => {\n      link\n        .attr(\"x1\", d => d.source.x)\n        .attr(\"y1\", d => d.source.y)\n        .attr(\"x2\", d => d.target.x)\n        .attr(\"y2\", d => d.target.y);\n      node\n        .attr(\"cx\", d => d.x)\n        .attr(\"cy\", d => d.y);\n    });\n\n    return svg.node();\n  }\n\n  componentDidMount(){\n    console.log(\"Component did mount !\")\n    if (!firebase.apps.length) {\n      firebase.initializeApp(config);\n    }\n    let ref = firebase.database().ref(\"data3\");\n    ref.on(\"value\", snapshot => {\n      const movies = snapshot.val();\n      let newState = [];\n      let newNodes = [];\n      let newLinks = [];\n      for (let movie in movies) {\n        if(movies[movie].List === \"GraphViz\"){\n          newState.push(movies[movie]);\n          newNodes.push({name: movies[movie].Title, poster: movies[movie].Poster, group: 1});\n          const name_array = movies[movie].Actors.split(\", \");\n          console.log(\"Actors: \", name_array)\n          for (let temp_name in name_array){\n            let actorFound = false;\n            for (let temp_node in newNodes){\n              if(name_array[temp_name] == newNodes[temp_node].name){\n                actorFound = true;\n              }\n            }\n            if(actorFound === false){\n              newNodes.push({name: name_array[temp_name], group: 2});\n            }\n            var index1 = newNodes.findIndex(obj => obj.name==movies[movie].Title);\n            var index2 = newNodes.findIndex(obj => obj.name==name_array[temp_name]);\n            newLinks.push({source: index1, target: index2,});\n          }\n        }\n      }\n      this.setState({ movies: newState });\n      this.setState({ nodes: newNodes });\n      this.setState({ links: newLinks });\n    });\n  }\n\n  componentDidUpdate(){\n    if(Object.keys(this.state.nodes).length !== 0 && Object.keys(this.state.links).length !== 0){\n      const elem = document.getElementById(\"mysvg\");\n      elem.appendChild(this.chart(this.state.nodes, this.state.links));\n    }\n    console.log(\"New nodes :\" , this.state.nodes);\n    console.log(\"New links :\" , this.state.links);\n  }\n\n  render(){\n    return(\n      <div>\n        <div id=\"mysvg\">\n        </div>\n        <div className=\"descrip-graph\">\n          You can edit this graph by arranging the GraphViz list in Movies tab.\n        </div>\n      </div>\n      \n    );\n  }\n\n}export default Link;","import React, {Component} from 'react';\nimport Movies from './Movies';\nimport Link from './Links'\n// import { render } from \"react-dom\";\n\nexport class Body extends Component{\n  displayContent = () =>{\n    var activeTab = this.props.activeTab\n    if(activeTab == 1){\n      return <Movies></Movies>\n    }\n    else{\n      return <Link></Link>\n    }\n  }\n  render(){\n    return(\n      this.displayContent()\n    );\n  }\n}\nexport default Body;","import React, {Component} from 'react';\nimport './App.css'\nimport TabList from './components/TabList';\nimport Body from './components/Body';\n// import BackToTop from './components/BackToTop'\n// import config from './config.js'\n// const firebase = require('firebase')\n\nexport class App extends Component{\n  constructor(){\n    super();\n    this.state = {\n      activeTab: 1\n    }\n    this.changeTab = (id) =>{\n      if(id != 3){\n        this.setState({\n        activeTab: id\n      })\n      }\n      \n    }\n  }\n  // handleOverScroll(){\n  //   var bttn=document.querySelector(\".top\");\n  //   if(document.body.scrollTop>100 || document.documentElement.scrollTop>100 ){\n  //       bttn.style.visibility=\"visible\";\n  //   }\n  //   else{\n  //       bttn.style.visibility=\"hidden\";\n  //   }\n  // }\n  // componentDidMount(){\n  //   document.title = \"Rain Wang\"\n  //   window.addEventListener('scroll',this.handleOverScroll)\n    // if (!firebase.apps.length){\n    //   firebase.initializeApp(config)\n    // } \n    // //get a reference to the database\n    // let ref = firebase.database().ref('data')\n\n    // //retrieve its data\n    // ref.on('value', snapshot => {\n    //     //this is your call back function\n    //     //state will be a JSON object after this\n    //     //set your apps state to contain this data however you like\n    //     const state = snapshot.val()\n    //     //since i use react 16, i set my state like this\n    //     //i have previously declared a state variable like this: const [data, setData] = useState([]) so that I can make the below call\n    //     setData(state)\n    //     const data = snapshot.val()\n    //     this.setState({data: data})\n    // })\n\n  // }\n  // componentDidUpdate(prevProps, prevState, snapshot){\n  //   //only call set state here if it is wrapped in a condition\n  //   //if you initialize this.state.shouldUpdate and have not changed it yet then this will not run\n  //   if(this.state.shouldUpdate != prevState.shouldUpdate){\n  //     //same code as above to retrieve the data \n  //   }\n  // }\n\n  render(){\n    const tabs = [\n      {\n        id: 1,\n        title: \"Movies\"\n      },\n      {\n        id: 2,\n        title: \"Graph\"\n      },\n    ]\n    return(\n      <div className=\"body\">\n        <div className=\"nav-bar\">\n          <TabList tabs={tabs} \n          activeTab={this.state.activeTab}\n          changeTab={this.changeTab}/>\n        </div>\n        <div className=\"main-body\">\n          <Body activeTab={this.state.activeTab}></Body>\n        </div>\n      </div>\n    );\n  }\n}\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}