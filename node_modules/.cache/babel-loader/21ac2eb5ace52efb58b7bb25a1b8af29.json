{"ast":null,"code":"var _jsxFileName = \"/Users/rainwang/Desktop/UCSB/CS185/PersonalWebReact/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport TabList from './components/TabList';\nimport Body from './components/Body';\nimport BackToTop from './components/BackToTop'; // import config from './config.js'\n// const firebase = require('firebase')\n\nexport class App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      activeTab: 1\n    };\n\n    this.changeTab = id => {\n      if (id != 6) {\n        this.setState({\n          activeTab: id\n        });\n      }\n    };\n  }\n\n  handleOverScroll() {\n    var bttn = document.querySelector(\".top\");\n\n    if (document.body.scrollTop > 100 || document.documentElement.scrollTop > 100) {\n      bttn.style.visibility = \"visible\";\n    } else {\n      bttn.style.visibility = \"hidden\";\n    }\n  }\n\n  componentDidMount() {\n    window.addEventListener('scroll', this.handleOverScroll); // if (!firebase.apps.length){\n    //   firebase.initializeApp(config)\n    // } \n    // //get a reference to the database\n    // let ref = firebase.database().ref('data')\n    // //retrieve its data\n    // ref.on('value', snapshot => {\n    //     //this is your call back function\n    //     //state will be a JSON object after this\n    //     //set your apps state to contain this data however you like\n    //     const state = snapshot.val()\n    //     //since i use react 16, i set my state like this\n    //     //i have previously declared a state variable like this: const [data, setData] = useState([]) so that I can make the below call\n    //     setData(state)\n    //     const data = snapshot.val()\n    //     this.setState({data: data})\n    // })\n  } // componentDidUpdate(prevProps, prevState, snapshot){\n  //   //only call set state here if it is wrapped in a condition\n  //   //if you initialize this.state.shouldUpdate and have not changed it yet then this will not run\n  //   if(this.state.shouldUpdate != prevState.shouldUpdate){\n  //     //same code as above to retrieve the data \n  //   }\n  // }\n\n\n  render() {\n    const tabs = [{\n      id: 1,\n      title: \"Home\"\n    }, {\n      id: 2,\n      title: \"Images\"\n    }, {\n      id: 3,\n      title: \"Videos\"\n    }, {\n      id: 4,\n      title: \"Projects\"\n    }, {\n      id: 5,\n      title: \"Contact\"\n    }];\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"nav-bar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(TabList, {\n      tabs: tabs,\n      activeTab: this.state.activeTab,\n      changeTab: this.changeTab,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"tab-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }\n    }, \"Rain Wang\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"main-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Body, {\n      activeTab: this.state.activeTab,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(BackToTop, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\nexport default App;","map":{"version":3,"sources":["/Users/rainwang/Desktop/UCSB/CS185/PersonalWebReact/src/App.js"],"names":["React","Component","TabList","Body","BackToTop","App","constructor","state","activeTab","changeTab","id","setState","handleOverScroll","bttn","document","querySelector","body","scrollTop","documentElement","style","visibility","componentDidMount","window","addEventListener","render","tabs","title"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAO,WAAP;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,SAAP,MAAsB,wBAAtB,C,CACA;AACA;;AAEA,OAAO,MAAMC,GAAN,SAAkBJ,SAAlB,CAA2B;AAChCK,EAAAA,WAAW,GAAE;AACX;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,SAAS,EAAE;AADA,KAAb;;AAGA,SAAKC,SAAL,GAAkBC,EAAD,IAAO;AACtB,UAAGA,EAAE,IAAI,CAAT,EAAW;AACT,aAAKC,QAAL,CAAc;AACdH,UAAAA,SAAS,EAAEE;AADG,SAAd;AAGD;AAEF,KAPD;AAQD;;AACDE,EAAAA,gBAAgB,GAAE;AAChB,QAAIC,IAAI,GAACC,QAAQ,CAACC,aAAT,CAAuB,MAAvB,CAAT;;AACA,QAAGD,QAAQ,CAACE,IAAT,CAAcC,SAAd,GAAwB,GAAxB,IAA+BH,QAAQ,CAACI,eAAT,CAAyBD,SAAzB,GAAmC,GAArE,EAA0E;AACtEJ,MAAAA,IAAI,CAACM,KAAL,CAAWC,UAAX,GAAsB,SAAtB;AACH,KAFD,MAGI;AACAP,MAAAA,IAAI,CAACM,KAAL,CAAWC,UAAX,GAAsB,QAAtB;AACH;AACF;;AACDC,EAAAA,iBAAiB,GAAE;AACjBC,IAAAA,MAAM,CAACC,gBAAP,CAAwB,QAAxB,EAAiC,KAAKX,gBAAtC,EADiB,CAEjB;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAED,GA7C+B,CA8ChC;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEAY,EAAAA,MAAM,GAAE;AACN,UAAMC,IAAI,GAAG,CACX;AACEf,MAAAA,EAAE,EAAE,CADN;AAEEgB,MAAAA,KAAK,EAAE;AAFT,KADW,EAKX;AACEhB,MAAAA,EAAE,EAAE,CADN;AAEEgB,MAAAA,KAAK,EAAE;AAFT,KALW,EASX;AACEhB,MAAAA,EAAE,EAAE,CADN;AAEEgB,MAAAA,KAAK,EAAE;AAFT,KATW,EAaX;AACEhB,MAAAA,EAAE,EAAE,CADN;AAEEgB,MAAAA,KAAK,EAAE;AAFT,KAbW,EAiBX;AACEhB,MAAAA,EAAE,EAAE,CADN;AAEEgB,MAAAA,KAAK,EAAE;AAFT,KAjBW,CAAb;AAsBA,wBACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,OAAD;AAAS,MAAA,IAAI,EAAED,IAAf;AACA,MAAA,SAAS,EAAE,KAAKlB,KAAL,CAAWC,SADtB;AAEA,MAAA,SAAS,EAAE,KAAKC,SAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAIE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAJF,CADF,eASE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD;AAAM,MAAA,SAAS,EAAE,KAAKF,KAAL,CAAWC,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CATF,CADF;AAgBD;;AA7F+B;AA+FlC,eAAeH,GAAf","sourcesContent":["import React, {Component} from 'react';\nimport './App.css'\nimport TabList from './components/TabList';\nimport Body from './components/Body';\nimport BackToTop from './components/BackToTop'\n// import config from './config.js'\n// const firebase = require('firebase')\n\nexport class App extends Component{\n  constructor(){\n    super();\n    this.state = {\n      activeTab: 1\n    }\n    this.changeTab = (id) =>{\n      if(id != 6){\n        this.setState({\n        activeTab: id\n      })\n      }\n      \n    }\n  }\n  handleOverScroll(){\n    var bttn=document.querySelector(\".top\");\n    if(document.body.scrollTop>100 || document.documentElement.scrollTop>100 ){\n        bttn.style.visibility=\"visible\";\n    }\n    else{\n        bttn.style.visibility=\"hidden\";\n    }\n  }\n  componentDidMount(){\n    window.addEventListener('scroll',this.handleOverScroll)\n    // if (!firebase.apps.length){\n    //   firebase.initializeApp(config)\n    // } \n    // //get a reference to the database\n    // let ref = firebase.database().ref('data')\n\n    // //retrieve its data\n    // ref.on('value', snapshot => {\n    //     //this is your call back function\n    //     //state will be a JSON object after this\n    //     //set your apps state to contain this data however you like\n    //     const state = snapshot.val()\n    //     //since i use react 16, i set my state like this\n    //     //i have previously declared a state variable like this: const [data, setData] = useState([]) so that I can make the below call\n    //     setData(state)\n    //     const data = snapshot.val()\n    //     this.setState({data: data})\n    // })\n\n  }\n  // componentDidUpdate(prevProps, prevState, snapshot){\n  //   //only call set state here if it is wrapped in a condition\n  //   //if you initialize this.state.shouldUpdate and have not changed it yet then this will not run\n  //   if(this.state.shouldUpdate != prevState.shouldUpdate){\n  //     //same code as above to retrieve the data \n  //   }\n  // }\n\n  render(){\n    const tabs = [\n      {\n        id: 1,\n        title: \"Home\"\n      },\n      {\n        id: 2,\n        title: \"Images\"\n      },\n      {\n        id: 3,\n        title: \"Videos\"\n      },\n      {\n        id: 4,\n        title: \"Projects\"\n      },\n      {\n        id: 5,\n        title: \"Contact\"\n      },\n    ]\n    return(\n      <div className=\"body\">\n        <div className=\"nav-bar\">\n          <TabList tabs={tabs} \n          activeTab={this.state.activeTab}\n          changeTab={this.changeTab}/>\n          <div className=\"tab-right\">\n          Rain Wang\n          </div>\n        </div>\n        <div className=\"main-body\">\n          <Body activeTab={this.state.activeTab}></Body>\n          <BackToTop/>\n        </div>\n      </div>\n    );\n  }\n}\nexport default App;"]},"metadata":{},"sourceType":"module"}