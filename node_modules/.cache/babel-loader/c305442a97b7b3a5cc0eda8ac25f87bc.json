{"ast":null,"code":"import _slicedToArray from\"/Users/rainwang/Desktop/UCSB/CS185/PersonalWebReact/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{Component,useEffect,useState}from'react';import'./Contact.css';import config from'./config.js';import Form from'./Form';var firebase=require('firebase');function Contact(props){// var messages = []\nvar _useState=useState([]),_useState2=_slicedToArray(_useState,2),messages=_useState2[0],setMessage=_useState2[1];// const [state, setData] = useState([])\nvar _useState3=useState(true),_useState4=_slicedToArray(_useState3,2),shouldRender=_useState4[0],setShouldRender=_useState4[1];// const sample = [\"hi\", \"how are you\"]\nuseEffect(function(){if(!firebase.apps.length){firebase.initializeApp(config);}var ref=firebase.database().ref('data2');ref.on('value',function(snapshot){//this is your call back function\n//state will be a JSON object after this\n//set your apps state to contain this data however you like\nvar m2=snapshot.val();//since i use react 16, i set my state like this\n//i have previously declared a state variable like this: const [data, setData] = useState([]) so that I can make the below call\n// setData(state)\nvar newState=[];for(var m1 in m2){newState.push({name:m2[m1].name,description:m2[m1].description,message:m2[m1].message,pubview:m2[m1].pubview,email:m2[m1].email,time:m2[m1].time});}setMessage(newState);// console.log(\"Inside display2: \", newState);\n});},[shouldRender]);function displayMessage(){// console.log(\"Inside display1: \", messages);\nvar content=messages.map(function(post,index){if(post.pubview===\"public\"){return/*#__PURE__*/React.createElement(\"div\",{key:index,className:\"post\"},/*#__PURE__*/React.createElement(\"h3\",null,post.name),/*#__PURE__*/React.createElement(\"div\",{className:\"description\"},post.description),/*#__PURE__*/React.createElement(\"p\",null,post.message),/*#__PURE__*/React.createElement(\"p\",null,post.time));}else{return/*#__PURE__*/React.createElement(\"div\",null);}});return/*#__PURE__*/React.createElement(\"div\",{className:\"postSection\"},/*#__PURE__*/React.createElement(\"div\",{className:\"header\"},\"Footprint History\"),content);}return/*#__PURE__*/React.createElement(\"div\",{className:\"background\"},/*#__PURE__*/React.createElement(\"div\",{className:\"white-space\"}),/*#__PURE__*/React.createElement(\"div\",{className:\"horizontal\"},/*#__PURE__*/React.createElement(\"div\",{className:\"left-side\"},/*#__PURE__*/React.createElement(Form,null)),/*#__PURE__*/React.createElement(\"div\",{className:\"right-side\"},displayMessage())));}export default Contact;","map":{"version":3,"sources":["/Users/rainwang/Desktop/UCSB/CS185/PersonalWebReact/src/components/Contact.js"],"names":["React","Component","useEffect","useState","config","Form","firebase","require","Contact","props","messages","setMessage","shouldRender","setShouldRender","apps","length","initializeApp","ref","database","on","snapshot","m2","val","newState","m1","push","name","description","message","pubview","email","time","displayMessage","content","map","post","index"],"mappings":"0KAAA,MAAOA,CAAAA,KAAP,EAAeC,SAAf,CAA0BC,SAA1B,CAAqCC,QAArC,KAAoD,OAApD,CACA,MAAO,eAAP,CACA,MAAOC,CAAAA,MAAP,KAAmB,aAAnB,CACA,MAAOC,CAAAA,IAAP,KAAiB,QAAjB,CACA,GAAMC,CAAAA,QAAQ,CAAGC,OAAO,CAAC,UAAD,CAAxB,CAEA,QAASC,CAAAA,OAAT,CAAiBC,KAAjB,CAAuB,CACrB;AADqB,cAEUN,QAAQ,CAAC,EAAD,CAFlB,wCAEdO,QAFc,eAEJC,UAFI,eAGrB;AAHqB,eAImBR,QAAQ,CAAC,IAAD,CAJ3B,yCAIdS,YAJc,eAIAC,eAJA,eAKrB;AAEAX,SAAS,CAAC,UAAM,CACd,GAAI,CAACI,QAAQ,CAACQ,IAAT,CAAcC,MAAnB,CAA2B,CACzBT,QAAQ,CAACU,aAAT,CAAuBZ,MAAvB,EACD,CACD,GAAIa,CAAAA,GAAG,CAAGX,QAAQ,CAACY,QAAT,GAAoBD,GAApB,CAAwB,OAAxB,CAAV,CAEAA,GAAG,CAACE,EAAJ,CAAO,OAAP,CAAgB,SAAAC,QAAQ,CAAI,CAC1B;AACA;AACA;AACA,GAAMC,CAAAA,EAAE,CAAGD,QAAQ,CAACE,GAAT,EAAX,CACA;AACA;AACA;AACA,GAAIC,CAAAA,QAAQ,CAAG,EAAf,CACA,IAAI,GAAIC,CAAAA,EAAR,GAAcH,CAAAA,EAAd,CAAiB,CACfE,QAAQ,CAACE,IAAT,CAAc,CACZC,IAAI,CAAEL,EAAE,CAACG,EAAD,CAAF,CAAOE,IADD,CAEZC,WAAW,CAAEN,EAAE,CAACG,EAAD,CAAF,CAAOG,WAFR,CAGZC,OAAO,CAAEP,EAAE,CAACG,EAAD,CAAF,CAAOI,OAHJ,CAIZC,OAAO,CAAER,EAAE,CAACG,EAAD,CAAF,CAAOK,OAJJ,CAKZC,KAAK,CAAET,EAAE,CAACG,EAAD,CAAF,CAAOM,KALF,CAMZC,IAAI,CAAEV,EAAE,CAACG,EAAD,CAAF,CAAOO,IAND,CAAd,EAQD,CACDpB,UAAU,CAACY,QAAD,CAAV,CACA;AACD,CArBD,EAsBD,CA5BQ,CA4BN,CAACX,YAAD,CA5BM,CAAT,CA8BA,QAASoB,CAAAA,cAAT,EAA0B,CACxB;AACA,GAAMC,CAAAA,OAAO,CAAGvB,QAAQ,CAACwB,GAAT,CAAa,SAACC,IAAD,CAAOC,KAAP,CAAiB,CAC9C,GAAGD,IAAI,CAACN,OAAL,GAAiB,QAApB,CAA6B,CAC3B,mBAAO,2BAAK,GAAG,CAAEO,KAAV,CAAiB,SAAS,CAAC,MAA3B,eACL,8BAAKD,IAAI,CAACT,IAAV,CADK,cAEL,2BAAK,SAAS,CAAC,aAAf,EAA8BS,IAAI,CAACR,WAAnC,CAFK,cAGL,6BAAIQ,IAAI,CAACP,OAAT,CAHK,cAIL,6BAAIO,IAAI,CAACJ,IAAT,CAJK,CAAP,CAMD,CAPD,IAQI,CACF,mBAAO,+BAAP,CACD,CAEA,CAbe,CAAhB,CAcA,mBACE,2BAAK,SAAS,CAAC,aAAf,eACE,2BAAK,SAAS,CAAC,QAAf,sBADF,CAEGE,OAFH,CADF,CAMD,CAED,mBACE,2BAAK,SAAS,CAAC,YAAf,eACE,2BAAK,SAAS,CAAC,aAAf,EADF,cAEE,2BAAK,SAAS,CAAC,YAAf,eACE,2BAAK,SAAS,CAAC,WAAf,eAA2B,oBAAC,IAAD,MAA3B,CADF,cAEE,2BAAK,SAAS,CAAC,YAAf,EACGD,cAAc,EADjB,CAFF,CAFF,CADF,CAWD,CACD,cAAexB,CAAAA,OAAf","sourcesContent":["import React, {Component, useEffect, useState} from 'react';\nimport './Contact.css'\nimport config from './config.js'\nimport Form from './Form'\nconst firebase = require('firebase')\n\nfunction Contact(props){\n  // var messages = []\n  const [messages, setMessage] = useState([]);\n  // const [state, setData] = useState([])\n  const [shouldRender, setShouldRender] = useState(true)\n  // const sample = [\"hi\", \"how are you\"]\n\n  useEffect(() => {\n    if (!firebase.apps.length) {\n      firebase.initializeApp(config)\n    } \n    let ref = firebase.database().ref('data2')\n\n    ref.on('value', snapshot => {\n      //this is your call back function\n      //state will be a JSON object after this\n      //set your apps state to contain this data however you like\n      const m2 = snapshot.val()\n      //since i use react 16, i set my state like this\n      //i have previously declared a state variable like this: const [data, setData] = useState([]) so that I can make the below call\n      // setData(state)\n      let newState = [];\n      for(let m1 in m2){\n        newState.push({\n          name: m2[m1].name,\n          description: m2[m1].description,\n          message: m2[m1].message,\n          pubview: m2[m1].pubview,\n          email: m2[m1].email,\n          time: m2[m1].time,\n        });\n      }\n      setMessage(newState);\n      // console.log(\"Inside display2: \", newState);\n    })\n  }, [shouldRender])\n\n  function displayMessage() {\n    // console.log(\"Inside display1: \", messages);\n    const content = messages.map((post, index) => {\n    if(post.pubview === \"public\"){\n      return <div key={index} className=\"post\">\n        <h3>{post.name}</h3>\n        <div className=\"description\">{post.description}</div>\n        <p>{post.message}</p>\n        <p>{post.time}</p>\n      </div>\n    }\n    else{\n      return <div></div>\n    }\n      \n    });\n    return (\n      <div className=\"postSection\">\n        <div className=\"header\">Footprint History</div>\n        {content}\n      </div>\n    );\n  }\n\n  return(\n    <div className=\"background\">\n      <div className=\"white-space\"></div>\n      <div className=\"horizontal\">\n        <div className=\"left-side\"><Form /></div>\n        <div className=\"right-side\">\n          {displayMessage()}\n        </div>\n      </div>\n    </div>\n  );\n}\nexport default Contact;\n"]},"metadata":{},"sourceType":"module"}