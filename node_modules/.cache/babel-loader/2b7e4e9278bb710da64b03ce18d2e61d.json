{"ast":null,"code":"var _jsxFileName = \"/Users/rainwang/Desktop/UCSB/CS185/PersonalWebReact/src/components/Form.js\";\nimport React, { Component, useEffect, useState } from 'react';\nimport './Contact.css';\n\nconst firebase = require('firebase');\n\nconst styles = {\n  fontFamily: 'sans-serif',\n  textAlign: 'left',\n  textAlign: 'top'\n};\nconst err1 = '*Name must be between 5 and 20 characters*\\n\\n';\nconst err2 = '*Invalid email format*\\n';\nconst err3 = '*Description must be under 100 characters*\\n';\nconst err4 = '*Your message must be between 15 and 500 characters*\\n';\n\nclass Form extends React.Component {\n  // const timestamp = Date.now();\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: null,\n      description: null,\n      id: 0,\n      email: null,\n      pubview: 'private',\n      message: null,\n      time: '',\n      error1: '',\n      error2: '',\n      error3: '',\n      error4: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    let nam = event.target.name;\n    let val = event.target.value;\n    let err = '';\n\n    if (nam === \"fname\") {\n      if (val.length < 5 || val.length > 20) {\n        err = /*#__PURE__*/React.createElement(\"strong\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 15\n          }\n        }, \"*Name must be between 5 and 20 characters*\");\n        this.state.error1 = err1;\n        this.setState({\n          name: val\n        });\n      } else {\n        this.state.error1 = '';\n        this.setState({\n          name: val\n        });\n      }\n    }\n\n    if (nam === \"femail\") {\n      var mailformat = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n\n      if (val === '') {\n        this.state.error2 = '';\n        this.setState({\n          email: val\n        });\n      } else if (!val.match(mailformat)) {\n        this.state.error2 = err2;\n        this.setState({\n          email: val\n        });\n      } else {\n        this.state.error2 = '';\n        this.setState({\n          email: val\n        });\n      }\n    }\n\n    if (nam === \"fdescription\") {\n      if (val.length > 100) {\n        this.state.error3 = err3;\n        this.setState({\n          description: val\n        });\n      } else {\n        this.state.error3 = '';\n        this.setState({\n          description: val\n        });\n      }\n    }\n\n    if (nam === \"fmessage\") {\n      if (val.length < 15 || val.length > 500) {\n        this.state.error4 = err4;\n        this.setState({\n          message: val\n        });\n      } else {\n        this.state.error4 = '';\n        this.setState({\n          message: val\n        });\n      }\n    }\n\n    if (nam === \"fpubview\") {\n      this.setState({\n        pubview: val\n      });\n    }\n\n    console.log(\"nam : \", nam);\n    console.log(\"val : \", val); // this.setState({value: event.target.value});\n\n    this.setState({\n      nam: val\n    });\n  }\n\n  handleSubmit(event) {\n    let nam = event.target.name;\n    let val = event.target.value;\n\n    if (this.state.error1 != '' || this.state.error2 != '' || this.state.error3 != '' || this.state.error4 != '') {\n      alert(\"Error in your message, please modify.\");\n      event.preventDefault();\n    } else if (this.state.message === null || this.state.name === null) {\n      console.log(\"Empty form\");\n      alert(\"Form not complete, please fill in some message.\");\n      event.preventDefault();\n    } else {\n      //'data' here is a field in my database that stores all my messages\n      //push() adds a child\n      //set(jsonBody) sets the value of that child to jsonBody, which is valid JSON\n      // let tempForm = {\n      //   id: 0,\n      //   name: this.state.name,\n      //   description: this.state.descriptio,\n      //   message: this.state.message,\n      //   pubview: this.state.pubview,\n      //   email: this.state.email,\n      //   time: new Date().toLocaleString(),\n      // }\n      // let jsonBody = JSON.stringify(tempForm);\n      // console.log(jsonBody);\n      // console.log(tempForm);\n      // firebase.database().ref('data').push().set(jsonBody);\n      // alert('Your message has been successfully submitted.');\n      firebase.database().ref(\"data2\").push({\n        name: this.state.name,\n        description: this.state.description,\n        message: this.state.message,\n        pubview: this.state.pubview,\n        email: this.state.email,\n        time: new Date().toLocaleString()\n      });\n      this.setState({\n        name: null,\n        description: null,\n        message: null,\n        email: null\n      });\n      alert('Your message has been successfully submitted.');\n      event.preventDefault();\n    }\n  }\n\n  printError() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }\n    }, this.state.error1), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }\n    }, this.state.error3), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }\n    }, this.state.error4), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }\n    }, this.state.error2));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"form\", {\n      className: \"form\",\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }\n    }, \"Name: \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"fname\",\n      value: this.state.name,\n      style: {\n        width: \"400px\",\n        fontSize: \"13pt\"\n      },\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }\n    }, \"A short description of yourself: (optional) \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 55\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"fdescription\",\n      value: this.state.description,\n      style: {\n        width: \"400px\",\n        fontSize: \"13pt\"\n      },\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      style: styles,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }\n    }, \"Leave a message to prove that you've been here ~ \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 60\n      }\n    }), /*#__PURE__*/React.createElement(\"textarea\", {\n      className: \"userInput\",\n      name: \"fmessage\",\n      value: this.state.message,\n      style: {\n        width: \"400px\",\n        height: \"200px\",\n        padding: \"10px\",\n        fontSize: \"13pt\"\n      },\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }\n    }, \"Do you want your message to be public or private to other visitors? \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 79\n      }\n    }), /*#__PURE__*/React.createElement(\"select\", {\n      name: \"fpubview\",\n      value: this.state.pubview,\n      onChange: this.handleChange,\n      style: {\n        fontSize: \"13pt\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"private\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 13\n      }\n    }, \"Private\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"public\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 13\n      }\n    }, \"Public\"))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }\n    }, \"If you would like me to contact you, what's your email? (Emails will not be posted) \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 95\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"femail\",\n      value: this.state.email,\n      style: {\n        width: \"400px\",\n        fontSize: \"13pt\"\n      },\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ErrorMessage\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }\n    }, this.printError()), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default Form; // ReactDOM.render(\n//   <Form />,\n//   document.getElementById('root')\n// );","map":{"version":3,"sources":["/Users/rainwang/Desktop/UCSB/CS185/PersonalWebReact/src/components/Form.js"],"names":["React","Component","useEffect","useState","firebase","require","styles","fontFamily","textAlign","err1","err2","err3","err4","Form","constructor","props","state","name","description","id","email","pubview","message","time","error1","error2","error3","error4","handleChange","bind","handleSubmit","event","nam","target","val","value","err","length","setState","mailformat","match","console","log","alert","preventDefault","database","ref","push","Date","toLocaleString","printError","render","width","fontSize","height","padding"],"mappings":"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","sourcesContent":["import React, {Component, useEffect, useState} from 'react';\nimport './Contact.css'\nconst firebase = require('firebase')\n\nconst styles =  {\n  fontFamily: 'sans-serif',\n  textAlign: 'left',\n  textAlign: 'top',\n};\n\nconst err1 = '*Name must be between 5 and 20 characters*\\n\\n';\nconst err2 = '*Invalid email format*\\n';\nconst err3 = '*Description must be under 100 characters*\\n';\nconst err4 = '*Your message must be between 15 and 500 characters*\\n';\n\nclass Form extends React.Component {\n  // const timestamp = Date.now();\n\n  constructor(props) {\n    super(props);\n    this.state = {name: null, description: null, id: 0, email: null, pubview: 'private', message: null, time: '', error1: '', error2: '',error3: '', error4: ''};\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    let nam = event.target.name;\n    let val = event.target.value;\n    let err = '';\n    if (nam === \"fname\") {\n      if (val.length <5 || val.length > 20 ){\n        err = <strong>*Name must be between 5 and 20 characters*</strong>;\n        this.state.error1 = err1;\n        this.setState({name: val});\n      }\n      else{\n        this.state.error1 = '';\n        this.setState({name: val});\n      }\n    }\n    if (nam === \"femail\") {\n      var mailformat = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n      if(val === ''){\n        this.state.error2 = '';\n        this.setState({email: val});\n      }\n      else if (!val.match(mailformat)){\n        this.state.error2 = err2;\n        this.setState({email: val});\n      }\n      else{\n        this.state.error2 = '';\n        this.setState({email: val});\n      }\n    }\n    if (nam === \"fdescription\") {\n      if (val.length > 100){\n        this.state.error3 = err3;\n        this.setState({description: val});\n      }\n      else{\n        this.state.error3 = '';\n        this.setState({description: val});\n      }\n    }\n    if (nam === \"fmessage\") {\n      if (val.length < 15 || val.length > 500){\n        this.state.error4 = err4;\n        this.setState({message: val});\n      }\n      else{\n        this.state.error4 = '';\n        this.setState({message: val});\n      }\n    }\n    if (nam === \"fpubview\") {\n      this.setState({pubview: val});\n    }\n    console.log(\"nam : \", nam);\n    console.log(\"val : \", val);\n    // this.setState({value: event.target.value});\n    this.setState({\n      nam: val,\n    });\n  }\n\n  handleSubmit(event) {\n    \n    let nam = event.target.name;\n    let val = event.target.value;\n\n    if(this.state.error1 != '' || this.state.error2 != '' || this.state.error3 != '' || this.state.error4 != ''){\n      alert(\"Error in your message, please modify.\");\n      event.preventDefault();\n    }\n    else if(this.state.message === null || this.state.name === null){\n      console.log(\"Empty form\");\n      alert(\"Form not complete, please fill in some message.\");\n      event.preventDefault();\n    }\n    else{\n      //'data' here is a field in my database that stores all my messages\n      //push() adds a child\n      //set(jsonBody) sets the value of that child to jsonBody, which is valid JSON\n      // let tempForm = {\n      //   id: 0,\n      //   name: this.state.name,\n      //   description: this.state.descriptio,\n      //   message: this.state.message,\n      //   pubview: this.state.pubview,\n      //   email: this.state.email,\n      //   time: new Date().toLocaleString(),\n      // }\n      // let jsonBody = JSON.stringify(tempForm);\n      // console.log(jsonBody);\n      // console.log(tempForm);\n\n      // firebase.database().ref('data').push().set(jsonBody);\n      // alert('Your message has been successfully submitted.');\n      firebase.database().ref(\"data2\").push(\n        {\n          name: this.state.name,\n          description: this.state.description,\n          message: this.state.message,\n          pubview: this.state.pubview,\n          email: this.state.email,\n          time: new Date().toLocaleString()\n        }\n      );\n      this.setState({name: null ,description: null,message: null, email: null})\n\n      alert('Your message has been successfully submitted.');\n      event.preventDefault();\n    }\n    \n  }\n\n  printError(){\n    return(\n      <div>\n        <p>{this.state.error1}</p>\n        <p>{this.state.error3}</p>\n        <p>{this.state.error4}</p>\n        <p>{this.state.error2}</p>\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      <form className=\"form\" onSubmit={this.handleSubmit}>\n        <label>\n          Name: <br/>\n          <input type=\"text\" name=\"fname\" value={this.state.name} style={{width: \"400px\", fontSize: \"13pt\"}} onChange={this.handleChange} /> \n        </label><br/>\n        <label>\n          A short description of yourself: (optional) <br/>\n          <input type=\"text\" name=\"fdescription\" value={this.state.description} style={{width: \"400px\", fontSize: \"13pt\"}} onChange={this.handleChange} />\n        </label><br/>\n        <label style={styles}>\n          Leave a message to prove that you've been here ~ <br/>\n          <textarea className=\"userInput\" name=\"fmessage\" value={this.state.message} style={{width: \"400px\", height:\"200px\", padding: \"10px\", fontSize: \"13pt\"}} onChange={this.handleChange}></textarea>\n        </label><br/>\n        <label>\n          Do you want your message to be public or private to other visitors? <br/>\n          <select name=\"fpubview\" value={this.state.pubview} onChange={this.handleChange} style={{ fontSize: \"13pt\"}}>\n            <option value=\"private\">Private</option>\n            <option value=\"public\">Public</option>\n          </select>\n        </label><br/>\n        <label>\n          If you would like me to contact you, what's your email? (Emails will not be posted) <br/>\n          <input type=\"text\" name=\"femail\" value={this.state.email} style={{width: \"400px\", fontSize: \"13pt\"}} onChange={this.handleChange} />\n        </label><br/>\n        <div className=\"ErrorMessage\">\n          {this.printError()}\n        </div>\n        <input type=\"submit\" value=\"Submit\"  />\n      </form>\n    );\n  }\n}\nexport default Form;\n\n// ReactDOM.render(\n//   <Form />,\n//   document.getElementById('root')\n// );"]},"metadata":{},"sourceType":"module"}